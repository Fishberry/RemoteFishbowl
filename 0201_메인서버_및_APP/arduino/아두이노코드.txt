#include <Servo.h>
#include <Wire.h>
#include "RTClib.h"

const int WaterPumpA = 9; // 워터펌프 A
const int WaterPumpB = 10; // 워터펌프 B
const int SERVO = 8;       // 서보모터 8번핀

const int BLED = 11;
const int GLED = 12;
const int RLED = 13;

Servo myServo;  // 서보모터 인스턴스 변수
RTC_DS1307 RTC; // RTC 인스턴스 변수
String year, month, day, hour, minute, second, time, date;

void setup() {
  
  Serial.begin(9600);
  /* 서보모터 */
  myServo.attach(SERVO);
  myServo.write(0); // 처음에 0도로 초기화
  
  /* RTC */
  // I^2C버스와 RTC 모두 시작
  Wire.begin();
  RTC.begin();
  // RTC에 컴퓨터 시간으로 설정
  RTC.adjust(DateTime(__DATE__, __TIME__));

  /* 워터펌프 */
  pinMode(WaterPumpA, OUTPUT);       // Motor A 
  pinMode(WaterPumpB, OUTPUT);       // Motor B
  digitalWrite(WaterPumpA, HIGH);    // 모터 A,B 둘 다 정지
  digitalWrite(WaterPumpB, HIGH); 

  pinMode(BLED, OUTPUT);
  pinMode(GLED, OUTPUT);
  pinMode(RLED, OUTPUT);
  setMode(3);
}

void loop() {

  if(Serial.available())    // 시리얼 통신 활성화
  {
    String nodeData = Serial.readString(); // 시리얼통신 사용자 입력
    
    if(nodeData == "StartServo1")
    {
      operateServo(1);
    }
    else if(nodeData == "StartServo2")
    {
      operateServo(2);
    }
    else if(nodeData == "StartServo3")
    {
      operateServo(3);
    }
    else if(nodeData == "StartWater")
    {
      operateMotor('k');
    }
    else if(nodeData == "StartIN")
    {
      operateMotor('a');
    }
    else if(nodeData == "StopIN")
    {
      operateMotor('b');
    }
    else if(nodeData == "StartOUT")
    {
      operateMotor('c');
    }
    else if(nodeData == "StopOUT")
    {
      operateMotor('d');
    }
    else if(nodeData == "TempWN")
    {
      setMode(1);
    }
    else if(nodeData == "pHWN")
    {
      setMode(2);
    }
    else if(nodeData == "NotWN")
    {
      setMode(3);
    }
    else if(nodeData == "BothWN")
    {
      setMode(4);
    }
  }

  /* RTC 시간 구하기 */
  getTime();
  
}

void setMode(int mode) {
  if(mode == 1) {
    digitalWrite(RLED, HIGH);
    digitalWrite(GLED, LOW);
    digitalWrite(BLED, LOW);
  }
  else if(mode == 2) {
    analogWrite(RLED, 255);
    analogWrite(GLED, 0);
    analogWrite(BLED, 255);
  }
  else if(mode == 3) {
    digitalWrite(RLED, LOW);
    digitalWrite(GLED, HIGH);
    digitalWrite(BLED, LOW);
  }
  else if(mode == 4) {
    digitalWrite(RLED, HIGH);
    digitalWrite(GLED, HIGH);
    digitalWrite(BLED, HIGH);
  }
}

void getTime() {
  
  DateTime now = RTC.now();
  
  Serial.print(now.year(), DEC);  // 년
  year = String(now.year(), DEC);
  
  Serial.print(now.month(), DEC);  // 월
  month = String(now.month(), DEC);
  
  Serial.print(now.day(), DEC);   // 일
  day = String(now.day(), DEC);

  Serial.print(now.hour(), DEC);    // 시간
  hour = String(now.hour(), DEC);

  Serial.print(now.minute(), DEC);   // 분
  minute = String(now.minute(), DEC);

  Serial.print(now.second(), DEC);   // 초
  second = String(now.second(), DEC);

  Serial.println();
  delay(1000);
}

void operateMotor(char sw) {
  
  if ( sw == 'a') {
    digitalWrite(WaterPumpA, LOW);
  }
  
  else if ( sw == 'b') {
    digitalWrite(WaterPumpA, HIGH);
  }
  
  else if ( sw == 'c') {
    digitalWrite(WaterPumpB, LOW);
  }
  
  else if ( sw == 'd') {
    digitalWrite(WaterPumpB, HIGH);
  }
  
  else {
    digitalWrite(WaterPumpA, HIGH);
    digitalWrite(WaterPumpB, HIGH);
  }
}

void operateServo(int circle)
{
  for(int k=0; k<circle; k++) {
    /* 서보모터 170도 회전 */
    for(int i=0; i<170; i++) {
      myServo.write(i); // 서보모터 이동
      delay(15); // 서보모터 이동이 끝날 때까지 잠깐 대기
    }
    delay(500);
  
    for(int i=170; i>0; i--) {
      myServo.write(i); // 서보모터 이동
      delay(15); // 서보모터 이동이 끝날 때까지 잠깐 대기
    }
  }
}
